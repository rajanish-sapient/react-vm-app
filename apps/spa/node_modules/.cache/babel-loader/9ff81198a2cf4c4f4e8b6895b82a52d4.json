{"ast":null,"code":"import * as e from \"react\";\nexport function usePrevious(r) {\n  const u = e.useRef({\n    value: r,\n    previous: r\n  });\n  return e.useMemo(() => (u.current.value !== r && (u.current.previous = u.current.value, u.current.value = r), u.current.previous), [r]);\n}","map":{"version":3,"mappings":";OAEA,SAASA,WAAT,CAAwBC,CAAxB,EAAwBA;EACtB,MAAMC,IAAMC,EAAMC,MAAND,CAAa;IAAEF,QAAF;IAASI,UAAUJ;EAAnB,CAAbE,CAAZ;EAKA,OAAOA,EAAMG,OAANH,CAAc,OACfD,EAAIK,OAAJL,CAAYD,KAAZC,KAAsBD,CAAtBC,KACFA,EAAIK,OAAJL,CAAYG,QAAZH,GAAuBA,EAAIK,OAAJL,CAAYD,KAAnCC,EACAA,EAAIK,OAAJL,CAAYD,KAAZC,GAAoBD,CAFlBC,GAIGA,EAAIK,OAAJL,CAAYG,QALA,CAAdF,EAMJ,CAACF,CAAD,CANIE,CAAP;AAMIF","names":["usePrevious","value","ref","React","useRef","previous","useMemo","current"],"sources":["/Users/rajmahar/Desktop/SandBox/Collgate health/skin-health-frontend/node_modules/@radix-ui/react-use-previous/dist/packages/react/use-previous/src/usePrevious.tsx"],"sourcesContent":["import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n"]},"metadata":{},"sourceType":"module"}