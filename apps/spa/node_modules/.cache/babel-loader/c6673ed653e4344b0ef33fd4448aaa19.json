{"ast":null,"code":"import * as e from \"@radix-ui/react-visually-hidden\";\nimport { useCallbackRef as t } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect as n } from \"@radix-ui/react-use-layout-effect\";\nimport { usePrevious as o } from \"@radix-ui/react-use-previous\";\nimport { DismissableLayer as r } from \"@radix-ui/react-dismissable-layer\";\nimport { createCollection as a } from \"@radix-ui/react-collection\";\nimport { useId as i } from \"@radix-ui/react-id\";\nimport { Presence as u } from \"@radix-ui/react-presence\";\nimport { useDirection as s } from \"@radix-ui/react-use-direction\";\nimport { composeRefs as c, useComposedRefs as l } from \"@radix-ui/react-compose-refs\";\nimport { useControllableState as d } from \"@radix-ui/react-use-controllable-state\";\nimport { Primitive as v } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers as f } from \"@radix-ui/primitive\";\nimport { createContextScope as m } from \"@radix-ui/react-context\";\nimport p from \"react-dom\";\nimport * as g from \"react\";\nimport M from \"@babel/runtime/helpers/esm/extends\";\nconst [E, w, N] = a(\"NavigationMenu\"),\n      [x, R, h] = a(\"NavigationMenu\"),\n      [C, b] = m(\"NavigationMenu\", [N, h]);\nexport { b as createNavigationMenuScope };\nconst [_, y] = C(\"NavigationMenu\"),\n      [I, P] = C(\"NavigationMenu\");\nexport const NavigationMenu = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    value: o,\n    onValueChange: r,\n    defaultValue: a,\n    orientation: i = \"horizontal\",\n    ...u\n  } = e,\n        [c, d] = g.useState(null),\n        f = l(t, e => d(e));\n  /*#__PURE__*/\n\n  return g.createElement(T, {\n    scope: n,\n    isRootMenu: !0,\n    value: o,\n    onValueChange: r,\n    defaultValue: a,\n    dir: s(c, e.dir),\n    orientation: i,\n    rootNavigationMenu: c\n  }, /*#__PURE__*/g.createElement(v.nav, M({\n    \"aria-label\": \"Main\",\n    \"data-orientation\": i\n  }, u, {\n    ref: f\n  })));\n});\n/*#__PURE__*/\n\nexport const NavigationMenuSub = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    value: o,\n    onValueChange: r,\n    defaultValue: a,\n    orientation: i = \"horizontal\",\n    ...u\n  } = e,\n        s = y(\"NavigationMenuSub\", n);\n  /*#__PURE__*/\n\n  return g.createElement(T, {\n    scope: n,\n    isRootMenu: !1,\n    value: o,\n    onValueChange: r,\n    defaultValue: a,\n    dir: s.dir,\n    orientation: i,\n    rootNavigationMenu: s.rootNavigationMenu\n  }, /*#__PURE__*/g.createElement(v.div, M({\n    \"data-orientation\": i\n  }, u, {\n    ref: t\n  })));\n});\n/*#__PURE__*/\n\nconst T = e => {\n  const {\n    scope: t,\n    isRootMenu: n,\n    rootNavigationMenu: r,\n    value: a,\n    onValueChange: u,\n    defaultValue: s,\n    dir: c,\n    orientation: l,\n    children: v\n  } = e,\n        [f, m] = g.useState(null),\n        [p, M] = g.useState(new Map()),\n        [w, N] = g.useState(null),\n        x = g.useRef(0),\n        [R = \"\", h] = d({\n    prop: a,\n    onChange: u,\n    defaultProp: s\n  });\n  return g.useEffect(() => () => window.clearTimeout(x.current), [x]), /*#__PURE__*/g.createElement(_, {\n    scope: t,\n    isRootMenu: n,\n    rootNavigationMenu: r,\n    value: R,\n    previousValue: o(R),\n    baseId: i(),\n    dir: c,\n    orientation: l,\n    viewport: f,\n    onViewportChange: m,\n    indicatorTrack: w,\n    onIndicatorTrackChange: N,\n    onItemOver: g.useCallback(e => {\n      n && window.clearTimeout(x.current), h(e);\n    }, [h, n]),\n    onItemLeave: g.useCallback(() => {\n      n && (window.clearTimeout(x.current), x.current = window.setTimeout(() => h(\"\"), 150));\n    }, [h, n]),\n    onItemSelect: g.useCallback(e => {\n      h(t => n && t === e ? \"\" : e);\n    }, [h, n]),\n    onItemDismiss: g.useCallback(() => h(\"\"), [h]),\n    onViewportContentChange: g.useCallback((e, t) => {\n      M(n => (n.set(e, t), new Map(n)));\n    }, []),\n    onViewportContentRemove: g.useCallback(e => {\n      M(t => t.has(e) ? (t.delete(e), new Map(t)) : t);\n    }, [])\n  }, /*#__PURE__*/g.createElement(E.Provider, {\n    scope: t\n  }, /*#__PURE__*/g.createElement(I, {\n    scope: t,\n    items: p\n  }, v)));\n};\n\nexport const NavigationMenuList = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    ...o\n  } = e,\n        r = y(\"NavigationMenuList\", n),\n        a = /*#__PURE__*/g.createElement(v.ul, M({\n    \"data-orientation\": r.orientation\n  }, o, {\n    ref: t\n  }));\n  /*#__PURE__*/\n\n  return g.createElement(v.div, {\n    style: {\n      position: \"relative\"\n    },\n    ref: r.onIndicatorTrackChange\n  }, /*#__PURE__*/g.createElement(E.Slot, {\n    scope: n\n  }, r.isRootMenu ? /*#__PURE__*/g.createElement(S, {\n    asChild: !0\n  }, a) : a));\n});\n/*#__PURE__*/\n\nconst [L, k] = C(\"NavigationMenuItem\");\nexport const NavigationMenuItem = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    value: o,\n    ...r\n  } = e,\n        a = i(),\n        u = o || a || \"LEGACY_REACT_AUTO_VALUE\",\n        s = g.useRef(null),\n        c = g.useRef(null),\n        l = g.useRef(null),\n        d = g.useRef(() => {}),\n        f = g.useCallback(function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"start\";\n\n    if (s.current) {\n      d.current();\n      const t = z(s.current);\n      t.length && $(\"start\" === e ? t : t.reverse());\n    }\n  }, []),\n        m = g.useCallback(() => {\n    if (s.current) {\n      const e = z(s.current);\n      e.length && (d.current = function (e) {\n        return e.forEach(e => {\n          e.dataset.tabindex = e.getAttribute(\"tabindex\") || \"\", e.setAttribute(\"tabindex\", \"-1\");\n        }), () => {\n          e.forEach(e => {\n            const t = e.dataset.tabindex;\n            e.setAttribute(\"tabindex\", t);\n          });\n        };\n      }(e));\n    }\n  }, []);\n  /*#__PURE__*/\n\n  return g.createElement(L, {\n    scope: n,\n    value: u,\n    triggerRef: c,\n    contentRef: s,\n    focusProxyRef: l,\n    onEntryKeyDown: f,\n    onFocusProxyEnter: f,\n    onRootContentClose: m,\n    onContentFocusOutside: m\n  }, /*#__PURE__*/g.createElement(v.li, M({}, r, {\n    ref: t\n  })));\n});\n/*#__PURE__*/\n\nexport const NavigationMenuTrigger = /*#__PURE__*/g.forwardRef((t, n) => {\n  const {\n    __scopeNavigationMenu: o,\n    disabled: r,\n    ...a\n  } = t,\n        i = y(\"NavigationMenuTrigger\", t.__scopeNavigationMenu),\n        u = k(\"NavigationMenuTrigger\", t.__scopeNavigationMenu),\n        s = g.useRef(null),\n        c = l(s, u.triggerRef, n),\n        d = H(i.baseId, u.value),\n        m = W(i.baseId, u.value),\n        p = g.useRef(!1),\n        w = u.value === i.value;\n  /*#__PURE__*/\n\n  return g.createElement(g.Fragment, null, /*#__PURE__*/g.createElement(E.ItemSlot, {\n    scope: o,\n    value: u.value\n  }, /*#__PURE__*/g.createElement(K, {\n    asChild: !0\n  }, /*#__PURE__*/g.createElement(v.button, M({\n    id: d,\n    disabled: r,\n    \"data-disabled\": r ? \"\" : void 0,\n    \"data-state\": B(w),\n    \"aria-expanded\": w,\n    \"aria-controls\": m\n  }, a, {\n    ref: c,\n    onPointerEnter: f(t.onPointerEnter, () => {\n      p.current = !1;\n    }),\n    onPointerMove: f(t.onPointerMove, G(() => {\n      r || p.current || i.onItemOver(u.value);\n    })),\n    onPointerLeave: f(t.onPointerLeave, G(() => {\n      r || i.onItemLeave();\n    })),\n    onClick: f(t.onClick, () => {\n      i.onItemSelect(u.value), p.current = w;\n    }),\n    onKeyDown: f(t.onKeyDown, e => {\n      const t = {\n        horizontal: \"ArrowDown\",\n        vertical: \"rtl\" === i.dir ? \"ArrowLeft\" : \"ArrowRight\"\n      }[i.orientation];\n      w && e.key === t && (u.onEntryKeyDown(), e.preventDefault());\n    })\n  })))), w && /*#__PURE__*/g.createElement(g.Fragment, null, /*#__PURE__*/g.createElement(e.Root, {\n    \"aria-hidden\": !0,\n    tabIndex: 0,\n    ref: u.focusProxyRef,\n    onFocus: e => {\n      const t = u.contentRef.current,\n            n = e.relatedTarget,\n            o = n === s.current,\n            r = null == t ? void 0 : t.contains(n);\n      !o && r || u.onFocusProxyEnter(o ? \"start\" : \"end\");\n    }\n  }), i.viewport && /*#__PURE__*/g.createElement(\"span\", {\n    \"aria-owns\": m\n  })));\n});\n/*#__PURE__*/\n\nexport const NavigationMenuLink = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    active: o,\n    ...r\n  } = e;\n  /*#__PURE__*/\n\n  return g.createElement(K, {\n    asChild: !0\n  }, /*#__PURE__*/g.createElement(v.a, M({\n    \"data-active\": o ? \"\" : void 0,\n    \"aria-current\": o ? \"page\" : void 0\n  }, r, {\n    ref: t\n  })));\n});\n/*#__PURE__*/\n\nexport const NavigationMenuIndicator = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    forceMount: n,\n    ...o\n  } = e,\n        r = y(\"NavigationMenuIndicator\", e.__scopeNavigationMenu),\n        a = Boolean(r.value);\n  return r.indicatorTrack ? /*#__PURE__*/p.createPortal( /*#__PURE__*/g.createElement(u, {\n    present: n || a\n  }, /*#__PURE__*/g.createElement(V, M({}, o, {\n    ref: t\n  }))), r.indicatorTrack) : null;\n});\n/*#__PURE__*/\n\nconst V = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    ...o\n  } = e,\n        r = y(\"NavigationMenuIndicator\", n),\n        a = w(n),\n        [i, u] = g.useState(null),\n        [s, c] = g.useState(null),\n        l = \"horizontal\" === r.orientation,\n        d = Boolean(r.value);\n  g.useEffect(() => {\n    var e;\n    const t = null === (e = a().find(e => e.value === r.value)) || void 0 === e ? void 0 : e.ref.current;\n    t && u(t);\n  }, [a, r.value]);\n\n  const f = () => {\n    i && c({\n      size: l ? i.offsetWidth : i.offsetHeight,\n      offset: l ? i.offsetLeft : i.offsetTop\n    });\n  };\n\n  return U(i, f), U(r.indicatorTrack, f), s ? /*#__PURE__*/g.createElement(v.div, M({\n    \"aria-hidden\": !0,\n    \"data-state\": d ? \"visible\" : \"hidden\",\n    \"data-orientation\": r.orientation\n  }, o, {\n    ref: t,\n    style: {\n      position: \"absolute\",\n      ...(l ? {\n        left: 0,\n        width: s.size + \"px\",\n        transform: `translateX(${s.offset}px)`\n      } : {\n        top: 0,\n        height: s.size + \"px\",\n        transform: `translateY(${s.offset}px)`\n      }),\n      ...o.style\n    }\n  })) : null;\n});\nexport const NavigationMenuContent = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    forceMount: n,\n    ...o\n  } = e,\n        r = y(\"NavigationMenuContent\", e.__scopeNavigationMenu),\n        a = k(\"NavigationMenuContent\", e.__scopeNavigationMenu),\n        i = l(a.contentRef, t),\n        s = a.value === r.value,\n        c = {\n    value: a.value,\n    triggerRef: a.triggerRef,\n    focusProxyRef: a.focusProxyRef,\n    onContentFocusOutside: a.onContentFocusOutside,\n    onRootContentClose: a.onRootContentClose,\n    ...o\n  };\n  return r.viewport ? /*#__PURE__*/g.createElement(D, M({\n    forceMount: n\n  }, c, {\n    ref: i\n  })) : /*#__PURE__*/g.createElement(u, {\n    present: n || s\n  }, /*#__PURE__*/g.createElement(F, M({\n    \"data-state\": B(s)\n  }, c, {\n    ref: i,\n    onPointerEnter: f(e.onPointerEnter, () => {\n      r.onItemOver(a.value);\n    }),\n    onPointerLeave: f(e.onPointerLeave, G(r.onItemLeave)),\n    style: {\n      pointerEvents: !s && r.isRootMenu ? \"none\" : void 0,\n      ...c.style\n    }\n  })));\n});\n/*#__PURE__*/\n\nconst D = /*#__PURE__*/g.forwardRef((e, t) => {\n  const o = y(\"NavigationMenuContent\", e.__scopeNavigationMenu),\n        {\n    onViewportContentChange: r,\n    onViewportContentRemove: a\n  } = o;\n  return n(() => {\n    r(e.value, {\n      ref: t,\n      ...e\n    });\n  }, [e, t, r]), n(() => () => a(e.value), [e.value, a]), null;\n}),\n      F = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    value: o,\n    triggerRef: a,\n    focusProxyRef: i,\n    onRootContentClose: u,\n    onContentFocusOutside: s,\n    ...c\n  } = e,\n        d = y(\"NavigationMenuContent\", n),\n        v = g.useRef(null),\n        m = l(v, t),\n        p = H(d.baseId, o),\n        E = W(d.baseId, o),\n        N = w(n),\n        x = g.useRef(null),\n        {\n    onItemDismiss: R\n  } = d;\n  g.useEffect(() => {\n    const e = v.current;\n\n    if (d.isRootMenu && e) {\n      const t = () => {\n        var t;\n        R(), u(), e.contains(document.activeElement) && (null === (t = a.current) || void 0 === t || t.focus());\n      };\n\n      return e.addEventListener(\"navigationMenu.contentDismiss\", t), () => e.removeEventListener(\"navigationMenu.contentDismiss\", t);\n    }\n  }, [d.isRootMenu, e.value, a, R, u]);\n  const h = g.useMemo(() => {\n    const e = N().map(e => e.value);\n    \"rtl\" === d.dir && e.reverse();\n    const t = e.indexOf(d.value),\n          n = e.indexOf(d.previousValue),\n          r = o === d.value,\n          a = n === e.indexOf(o);\n    if (!r && !a) return x.current;\n\n    const i = (() => {\n      if (t !== n) {\n        if (r && -1 !== n) return t > n ? \"from-end\" : \"from-start\";\n        if (a && -1 !== t) return t > n ? \"to-start\" : \"to-end\";\n      }\n\n      return null;\n    })();\n\n    return x.current = i, i;\n  }, [d.previousValue, d.value, d.dir, N, o]);\n  /*#__PURE__*/\n\n  return g.createElement(S, {\n    asChild: !0\n  }, /*#__PURE__*/g.createElement(r, M({\n    id: E,\n    \"aria-labelledby\": p,\n    \"data-motion\": h,\n    \"data-orientation\": d.orientation\n  }, c, {\n    ref: m,\n    onDismiss: () => {\n      var e;\n      const t = new Event(\"navigationMenu.contentDismiss\", {\n        bubbles: !0,\n        cancelable: !0\n      });\n      null === (e = v.current) || void 0 === e || e.dispatchEvent(t);\n    },\n    onFocusOutside: f(e.onFocusOutside, e => {\n      var t;\n      s();\n      const n = e.target;\n      null !== (t = d.rootNavigationMenu) && void 0 !== t && t.contains(n) && e.preventDefault();\n    }),\n    onPointerDownOutside: f(e.onPointerDownOutside, e => {\n      var t;\n      const n = e.target,\n            o = N().some(e => {\n        var t;\n        return null === (t = e.ref.current) || void 0 === t ? void 0 : t.contains(n);\n      }),\n            r = d.isRootMenu && (null === (t = d.viewport) || void 0 === t ? void 0 : t.contains(n));\n      (o || r || !d.isRootMenu) && e.preventDefault();\n    }),\n    onKeyDown: f(e.onKeyDown, e => {\n      const t = e.altKey || e.ctrlKey || e.metaKey;\n\n      if (\"Tab\" === e.key && !t) {\n        const t = z(e.currentTarget),\n              o = document.activeElement,\n              r = t.findIndex(e => e === o);\n        var n;\n        if ($(e.shiftKey ? t.slice(0, r).reverse() : t.slice(r + 1, t.length))) e.preventDefault();else null === (n = i.current) || void 0 === n || n.focus();\n      }\n    })\n  })));\n});\nexport const NavigationMenuViewport = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    forceMount: n,\n    ...o\n  } = e,\n        r = y(\"NavigationMenuViewport\", e.__scopeNavigationMenu),\n        a = Boolean(r.value);\n  /*#__PURE__*/\n\n  return g.createElement(u, {\n    present: n || a\n  }, /*#__PURE__*/g.createElement(A, M({}, o, {\n    ref: t\n  })));\n});\n/*#__PURE__*/\n\nconst A = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    children: o,\n    ...r\n  } = e,\n        a = y(\"NavigationMenuViewport\", n),\n        i = l(t, a.onViewportChange),\n        s = P(\"NavigationMenuContent\", e.__scopeNavigationMenu),\n        [d, m] = g.useState(null),\n        [p, E] = g.useState(null),\n        w = d ? (null == d ? void 0 : d.width) + \"px\" : void 0,\n        N = d ? (null == d ? void 0 : d.height) + \"px\" : void 0,\n        x = Boolean(a.value),\n        R = x ? a.value : a.previousValue;\n  return U(p, () => {\n    p && m({\n      width: p.offsetWidth,\n      height: p.offsetHeight\n    });\n  }), /*#__PURE__*/g.createElement(v.div, M({\n    \"data-state\": B(x),\n    \"data-orientation\": a.orientation\n  }, r, {\n    ref: i,\n    style: {\n      pointerEvents: !x && a.isRootMenu ? \"none\" : void 0,\n      \"--radix-navigation-menu-viewport-width\": w,\n      \"--radix-navigation-menu-viewport-height\": N,\n      ...r.style\n    },\n    onPointerEnter: f(e.onPointerEnter, () => {\n      a.onItemOver(R);\n    }),\n    onPointerLeave: f(e.onPointerLeave, G(a.onItemLeave))\n  }), Array.from(s.items).map(_ref => {\n    let [e, {\n      ref: t,\n      forceMount: n,\n      ...o\n    }] = _ref;\n    const r = R === e;\n    /*#__PURE__*/\n\n    return g.createElement(u, {\n      key: e,\n      present: n || r\n    }, /*#__PURE__*/g.createElement(F, M({}, o, {\n      ref: c(t, e => {\n        r && e && E(e);\n      })\n    })));\n  }));\n}),\n      S = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    ...o\n  } = e,\n        r = y(\"FocusGroup\", n);\n  /*#__PURE__*/\n\n  return g.createElement(x.Provider, {\n    scope: n\n  }, /*#__PURE__*/g.createElement(x.Slot, {\n    scope: n\n  }, /*#__PURE__*/g.createElement(v.div, M({\n    dir: r.dir\n  }, o, {\n    ref: t\n  }))));\n}),\n      O = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"],\n      K = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    __scopeNavigationMenu: n,\n    ...o\n  } = e,\n        r = R(n),\n        a = y(\"FocusGroupItem\", n);\n  /*#__PURE__*/\n\n  return g.createElement(x.ItemSlot, {\n    scope: n\n  }, /*#__PURE__*/g.createElement(v.button, M({}, o, {\n    ref: t,\n    onKeyDown: f(e.onKeyDown, e => {\n      if ([\"Home\", \"End\", ...O].includes(e.key)) {\n        let t = r().map(e => e.ref.current);\n\n        if ([\"rtl\" === a.dir ? \"ArrowRight\" : \"ArrowLeft\", \"ArrowUp\", \"End\"].includes(e.key) && t.reverse(), O.includes(e.key)) {\n          const n = t.indexOf(e.currentTarget);\n          t = t.slice(n + 1);\n        }\n\n        setTimeout(() => $(t)), e.preventDefault();\n      }\n    })\n  })));\n});\n\nfunction z(e) {\n  const t = [],\n        n = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: e => {\n      const t = \"INPUT\" === e.tagName && \"hidden\" === e.type;\n      return e.disabled || e.hidden || t ? NodeFilter.FILTER_SKIP : e.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n\n  for (; n.nextNode();) t.push(n.currentNode);\n\n  return t;\n}\n\nfunction $(e) {\n  const t = document.activeElement;\n  return e.some(e => e === t || (e.focus(), document.activeElement !== t));\n}\n\nfunction U(e, o) {\n  const r = t(o);\n  n(() => {\n    let t = 0;\n\n    if (e) {\n      const n = new ResizeObserver(() => {\n        cancelAnimationFrame(t), t = window.requestAnimationFrame(r);\n      });\n      return n.observe(e), () => {\n        window.cancelAnimationFrame(t), n.unobserve(e);\n      };\n    }\n  }, [e, r]);\n}\n\nfunction B(e) {\n  return e ? \"open\" : \"closed\";\n}\n\nfunction H(e, t) {\n  return `${e}-trigger-${t}`;\n}\n\nfunction W(e, t) {\n  return `${e}-content-${t}`;\n}\n\nfunction G(e) {\n  return t => \"mouse\" === t.pointerType ? e(t) : void 0;\n}\n\nexport const Root = NavigationMenu;\nexport const Sub = NavigationMenuSub;\nexport const List = NavigationMenuList;\nexport const Item = NavigationMenuItem;\nexport const Trigger = NavigationMenuTrigger;\nexport const Link = NavigationMenuLink;\nexport const Indicator = NavigationMenuIndicator;\nexport const Content = NavigationMenuContent;\nexport const Viewport = NavigationMenuViewport;","map":{"version":3,"mappings":"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","names":["Collection","useCollection","createCollectionScope","createCollection","FocusGroupCollection","useFocusGroupCollection","createFocusGroupCollectionScope","createNavigationMenuContext","createNavigationMenuScope","createContextScope","NavigationMenuProviderImpl","useNavigationMenuContext","ViewportContentProvider","useViewportContentContext","NavigationMenu","React","forwardRef","props","forwardedRef","__scopeNavigationMenu","value","onValueChange","defaultValue","orientation","NavigationMenuProps","navigationMenu","setNavigationMenu","useState","composedRef","useComposedRefs","node","_react","$d8a3dfd9e3557366eb4bce361d7a0$var$NavigationMenuProvider","scope","isRootMenu","dir","useDirection","rootNavigationMenu","Primitive","nav","_babelRuntimeHelpersEsmExtends","ref","NavigationMenuSub","subProps","context","div","NavigationMenuProvider","valueProp","children","viewport","setViewport","viewportContent","setViewportContent","Map","indicatorTrack","setIndicatorTrack","closeTimerRef","useRef","setValue","useControllableState","prop","onChange","defaultProp","useEffect","window","clearTimeout","current","$d8a3dfd9e3557366eb4bce361d7a0$var$NavigationMenuProviderImpl","previousValue","usePrevious","baseId","useId","onViewportChange","onIndicatorTrackChange","onItemOver","useCallback","itemValue","onItemLeave","setTimeout","onItemSelect","prevValue","onItemDismiss","onViewportContentChange","contentValue","contentData","prevContent","set","onViewportContentRemove","has","delete","$d8a3dfd9e3557366eb4bce361d7a0$var$Collection","Provider","$d8a3dfd9e3557366eb4bce361d7a0$var$ViewportContentProvider","items","NavigationMenuList","listProps","list","ul","style","position","Slot","$d8a3dfd9e3557366eb4bce361d7a0$var$FocusGroup","asChild","NavigationMenuItemContextProvider","useNavigationMenuItemContext","NavigationMenuItem","itemProps","autoValue","contentRef","triggerRef","focusProxyRef","restoreContentTabOrderRef","handleContentEntry","side","candidates","getTabbableCandidates","length","focusFirst","reverse","handleContentExit","forEach","candidate","dataset","tabindex","getAttribute","setAttribute","prevTabIndex","removeFromTabOrder","$d8a3dfd9e3557366eb4bce361d7a0$var$NavigationMenuItemContextProvider","onEntryKeyDown","onFocusProxyEnter","onRootContentClose","onContentFocusOutside","li","NavigationMenuTrigger","disabled","triggerProps","itemContext","composedRefs","triggerId","makeTriggerId","contentId","makeContentId","wasClickCloseRef","open","ItemSlot","$d8a3dfd9e3557366eb4bce361d7a0$var$FocusGroupItem","button","id","undefined","getOpenState","onPointerEnter","composeEventHandlers","onPointerMove","whenMouse","onPointerLeave","onClick","onKeyDown","event","entryKey","horizontal","vertical","key","preventDefault","_radixUiReactVisuallyHidden","Root","tabIndex","onFocus","content","prevFocusedElement","relatedTarget","wasTriggerFocused","wasFocusFromContent","contains","NavigationMenuLink","active","linkProps","a","NavigationMenuIndicator","forceMount","indicatorProps","isVisible","Boolean","ReactDOM","createPortal","Presence","present","$d8a3dfd9e3557366eb4bce361d7a0$var$NavigationMenuIndicatorImpl","NavigationMenuIndicatorImpl","getItems","activeTrigger","setActiveTrigger","setPosition","isHorizontal","triggerNode","find","item","_items$find","handlePositionChange","size","offsetWidth","offsetHeight","offset","offsetLeft","offsetTop","useResizeObserver","left","width","transform","top","height","NavigationMenuContent","contentProps","commonProps","$d8a3dfd9e3557366eb4bce361d7a0$var$ViewportContentMounter","$d8a3dfd9e3557366eb4bce361d7a0$var$NavigationMenuContentImpl","pointerEvents","ViewportContentMounter","useLayoutEffect","NavigationMenuContentImpl","prevMotionAttributeRef","handleClose","document","activeElement","_triggerRef$current","focus","addEventListener","removeEventListener","motionAttribute","useMemo","values","map","index","indexOf","prevIndex","isSelected","wasSelected","attribute","DismissableLayer","onDismiss","contentDismissEvent","Event","bubbles","cancelable","_ref$current","dispatchEvent","onFocusOutside","target","_context$rootNavigati","onPointerDownOutside","isTrigger","some","_item$ref$current","isRootViewport","_context$viewport","isMetaKey","altKey","ctrlKey","metaKey","currentTarget","focusedElement","findIndex","shiftKey","slice","_focusProxyRef$curren","NavigationMenuViewport","viewportProps","$d8a3dfd9e3557366eb4bce361d7a0$var$NavigationMenuViewportImpl","NavigationMenuViewportImpl","viewportImplProps","viewportContentContext","setSize","setContent","viewportWidth","viewportHeight","activeContentValue","Array","from","isActive","composeRefs","FocusGroup","groupProps","$d8a3dfd9e3557366eb4bce361d7a0$var$FocusGroupCollection","ARROW_KEYS","FocusGroupItem","includes","candidateNodes","currentIndex","container","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","type","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","previouslyFocusedElement","element","onResize","handleResize","useCallbackRef","rAF","resizeObserver","ResizeObserver","cancelAnimationFrame","requestAnimationFrame","observe","unobserve","handler","pointerType","Sub","List","Item","Trigger","Link","Indicator","Content","Viewport"],"sources":["/Users/rajmahar/Desktop/SandBox/Collgate health/skin-health-frontend/node_modules/@radix-ui/react-navigation-menu/dist/packages/react/navigation-menu/src/NavigationMenu.tsx"],"sourcesContent":["/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useDirection } from '@radix-ui/react-use-direction';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Orientation = 'vertical' | 'horizontal';\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAVIGATION_MENU_NAME = 'NavigationMenu';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  NavigationMenuTriggerElement,\n  { value: string }\n>(NAVIGATION_MENU_NAME);\n\nconst [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] =\n  createCollection<FocusGroupItemElement, {}>(NAVIGATION_MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeNavigationMenu?: Scope };\nconst [createNavigationMenuContext, createNavigationMenuScope] = createContextScope(\n  NAVIGATION_MENU_NAME,\n  [createCollectionScope, createFocusGroupCollectionScope]\n);\n\ntype ContentData = {\n  ref?: React.Ref<ViewportContentMounterElement>;\n} & ViewportContentMounterProps;\n\ntype NavigationMenuContextValue = {\n  isRootMenu: boolean;\n  value: string;\n  previousValue: string;\n  baseId: string;\n  dir: Direction;\n  orientation: Orientation;\n  rootNavigationMenu: NavigationMenuElement | null;\n  indicatorTrack: HTMLDivElement | null;\n  onIndicatorTrackChange(indicatorTrack: HTMLDivElement | null): void;\n  viewport: NavigationMenuViewportElement | null;\n  onViewportChange(viewport: NavigationMenuViewportElement | null): void;\n  onViewportContentChange(contentValue: string, contentData: ContentData): void;\n  onViewportContentRemove(contentValue: string): void;\n  onItemOver(itemValue: string): void;\n  onItemLeave(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n};\n\nconst [NavigationMenuProviderImpl, useNavigationMenuContext] =\n  createNavigationMenuContext<NavigationMenuContextValue>(NAVIGATION_MENU_NAME);\n\nconst [ViewportContentProvider, useViewportContentContext] =\n  createNavigationMenuContext<{ items: Map<string, ContentData> }>(NAVIGATION_MENU_NAME);\n\ntype NavigationMenuElement = React.ElementRef<typeof Primitive.nav>;\ntype PrimitiveNavProps = Radix.ComponentPropsWithoutRef<typeof Primitive.nav>;\ninterface NavigationMenuProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    Omit<PrimitiveNavProps, 'defaultValue'> {\n  dir?: Direction;\n  orientation?: Orientation;\n}\n\nconst NavigationMenu = React.forwardRef<NavigationMenuElement, NavigationMenuProps>(\n  (props: ScopedProps<NavigationMenuProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...NavigationMenuProps\n    } = props;\n    const [navigationMenu, setNavigationMenu] = React.useState<NavigationMenuElement | null>(null);\n    const composedRef = useComposedRefs(forwardedRef, (node) => setNavigationMenu(node));\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={true}\n        value={value}\n        onValueChange={onValueChange}\n        defaultValue={defaultValue}\n        dir={useDirection(navigationMenu, props.dir)}\n        orientation={orientation}\n        rootNavigationMenu={navigationMenu}\n      >\n        <Primitive.nav\n          aria-label=\"Main\"\n          data-orientation={orientation}\n          {...NavigationMenuProps}\n          ref={composedRef}\n        />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenu.displayName = NAVIGATION_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'NavigationMenuSub';\n\ntype NavigationMenuSubElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface NavigationMenuSubProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    Omit<PrimitiveDivProps, 'defaultValue'> {\n  orientation?: Orientation;\n}\n\nconst NavigationMenuSub = React.forwardRef<NavigationMenuSubElement, NavigationMenuSubProps>(\n  (props: ScopedProps<NavigationMenuSubProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...subProps\n    } = props;\n    const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={false}\n        value={value}\n        onValueChange={onValueChange}\n        defaultValue={defaultValue}\n        dir={context.dir}\n        orientation={orientation}\n        rootNavigationMenu={context.rootNavigationMenu}\n      >\n        <Primitive.div data-orientation={orientation} {...subProps} ref={forwardedRef} />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenuSub.displayName = SUB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface NavigationMenuProviderPrivateProps {\n  isRootMenu: boolean;\n  scope: Scope;\n  children: React.ReactNode;\n  orientation: Orientation;\n  dir: Direction;\n  rootNavigationMenu: NavigationMenuElement | null;\n}\n\ninterface NavigationMenuProviderProps extends NavigationMenuProviderPrivateProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst NavigationMenuProvider: React.FC<NavigationMenuProviderProps> = (\n  props: ScopedProps<NavigationMenuProviderProps>\n) => {\n  const {\n    scope,\n    isRootMenu,\n    rootNavigationMenu,\n    value: valueProp,\n    onValueChange,\n    defaultValue,\n    dir,\n    orientation,\n    children,\n  } = props;\n  const [viewport, setViewport] = React.useState<NavigationMenuViewportElement | null>(null);\n  const [viewportContent, setViewportContent] = React.useState<Map<string, ContentData>>(new Map());\n  const [indicatorTrack, setIndicatorTrack] = React.useState<HTMLDivElement | null>(null);\n  const closeTimerRef = React.useRef(0);\n  const [value = '', setValue] = useControllableState({\n    prop: valueProp,\n    onChange: onValueChange,\n    defaultProp: defaultValue,\n  });\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(closeTimerRef.current);\n  }, [closeTimerRef]);\n\n  return (\n    <NavigationMenuProviderImpl\n      scope={scope}\n      isRootMenu={isRootMenu}\n      rootNavigationMenu={rootNavigationMenu}\n      value={value}\n      previousValue={usePrevious(value)}\n      baseId={useId()}\n      dir={dir}\n      orientation={orientation}\n      viewport={viewport}\n      onViewportChange={setViewport}\n      indicatorTrack={indicatorTrack}\n      onIndicatorTrackChange={setIndicatorTrack}\n      onItemOver={React.useCallback(\n        (itemValue) => {\n          if (isRootMenu) window.clearTimeout(closeTimerRef.current);\n          setValue(itemValue);\n        },\n        [setValue, isRootMenu]\n      )}\n      onItemLeave={React.useCallback(() => {\n        if (isRootMenu) {\n          window.clearTimeout(closeTimerRef.current);\n          closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n        }\n      }, [setValue, isRootMenu])}\n      onItemSelect={React.useCallback(\n        (itemValue) => {\n          setValue((prevValue) => {\n            return isRootMenu ? (prevValue === itemValue ? '' : itemValue) : itemValue;\n          });\n        },\n        [setValue, isRootMenu]\n      )}\n      onItemDismiss={React.useCallback(() => setValue(''), [setValue])}\n      onViewportContentChange={React.useCallback((contentValue, contentData) => {\n        setViewportContent((prevContent) => {\n          prevContent.set(contentValue, contentData);\n          return new Map(prevContent);\n        });\n      }, [])}\n      onViewportContentRemove={React.useCallback((contentValue) => {\n        setViewportContent((prevContent) => {\n          if (!prevContent.has(contentValue)) return prevContent;\n          prevContent.delete(contentValue);\n          return new Map(prevContent);\n        });\n      }, [])}\n    >\n      <Collection.Provider scope={scope}>\n        <ViewportContentProvider scope={scope} items={viewportContent}>\n          {children}\n        </ViewportContentProvider>\n      </Collection.Provider>\n    </NavigationMenuProviderImpl>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nconst LIST_NAME = 'NavigationMenuList';\n\ntype NavigationMenuListElement = React.ElementRef<typeof Primitive.ul>;\ntype PrimitiveUnorderedListProps = Radix.ComponentPropsWithoutRef<typeof Primitive.ul>;\ninterface NavigationMenuListProps extends PrimitiveUnorderedListProps {}\n\nconst NavigationMenuList = React.forwardRef<NavigationMenuListElement, NavigationMenuListProps>(\n  (props: ScopedProps<NavigationMenuListProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...listProps } = props;\n    const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);\n\n    const list = (\n      <Primitive.ul data-orientation={context.orientation} {...listProps} ref={forwardedRef} />\n    );\n\n    return (\n      <Primitive.div style={{ position: 'relative' }} ref={context.onIndicatorTrackChange}>\n        <Collection.Slot scope={__scopeNavigationMenu}>\n          {context.isRootMenu ? <FocusGroup asChild>{list}</FocusGroup> : list}\n        </Collection.Slot>\n      </Primitive.div>\n    );\n  }\n);\n\nNavigationMenuList.displayName = LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'NavigationMenuItem';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHiddenPrimitive.Root>;\n\ntype NavigationMenuItemContextValue = {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  contentRef: React.RefObject<NavigationMenuContentElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  onEntryKeyDown(): void;\n  onFocusProxyEnter(side: 'start' | 'end'): void;\n  onRootContentClose(): void;\n  onContentFocusOutside(): void;\n};\n\nconst [NavigationMenuItemContextProvider, useNavigationMenuItemContext] =\n  createNavigationMenuContext<NavigationMenuItemContextValue>(ITEM_NAME);\n\ntype NavigationMenuItemElement = React.ElementRef<typeof Primitive.li>;\ntype PrimitiveListItemProps = Radix.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface NavigationMenuItemProps extends PrimitiveListItemProps {\n  value?: string;\n}\n\nconst NavigationMenuItem = React.forwardRef<NavigationMenuItemElement, NavigationMenuItemProps>(\n  (props: ScopedProps<NavigationMenuItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;\n    const autoValue = useId();\n    // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = React.useRef<NavigationMenuContentElement>(null);\n    const triggerRef = React.useRef<NavigationMenuTriggerElement>(null);\n    const focusProxyRef = React.useRef<FocusProxyElement>(null);\n    const restoreContentTabOrderRef = React.useRef(() => {});\n\n    const handleContentEntry = React.useCallback((side = 'start') => {\n      if (contentRef.current) {\n        restoreContentTabOrderRef.current();\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) focusFirst(side === 'start' ? candidates : candidates.reverse());\n      }\n    }, []);\n\n    const handleContentExit = React.useCallback(() => {\n      if (contentRef.current) {\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);\n      }\n    }, []);\n\n    return (\n      <NavigationMenuItemContextProvider\n        scope={__scopeNavigationMenu}\n        value={value}\n        triggerRef={triggerRef}\n        contentRef={contentRef}\n        focusProxyRef={focusProxyRef}\n        onEntryKeyDown={handleContentEntry}\n        onFocusProxyEnter={handleContentEntry}\n        onRootContentClose={handleContentExit}\n        onContentFocusOutside={handleContentExit}\n      >\n        <Primitive.li {...itemProps} ref={forwardedRef} />\n      </NavigationMenuItemContextProvider>\n    );\n  }\n);\n\nNavigationMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'NavigationMenuTrigger';\n\ntype NavigationMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface NavigationMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst NavigationMenuTrigger = React.forwardRef<\n  NavigationMenuTriggerElement,\n  NavigationMenuTriggerProps\n>((props: ScopedProps<NavigationMenuTriggerProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;\n  const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuTriggerElement>(null);\n  const composedRefs = useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, itemContext.value);\n  const contentId = makeContentId(context.baseId, itemContext.value);\n  const wasClickCloseRef = React.useRef(false);\n  const open = itemContext.value === context.value;\n\n  return (\n    <>\n      <Collection.ItemSlot scope={__scopeNavigationMenu} value={itemContext.value}>\n        <FocusGroupItem asChild>\n          <Primitive.button\n            id={triggerId}\n            disabled={disabled}\n            data-disabled={disabled ? '' : undefined}\n            data-state={getOpenState(open)}\n            aria-expanded={open}\n            aria-controls={contentId}\n            {...triggerProps}\n            ref={composedRefs}\n            onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n              wasClickCloseRef.current = false;\n            })}\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse(() => {\n                if (disabled || wasClickCloseRef.current) return;\n                context.onItemOver(itemContext.value);\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse(() => {\n                if (disabled) return;\n                context.onItemLeave();\n              })\n            )}\n            onClick={composeEventHandlers(props.onClick, () => {\n              context.onItemSelect(itemContext.value);\n              wasClickCloseRef.current = open;\n            })}\n            onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n              const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n              const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n                context.orientation\n              ];\n\n              if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown();\n                // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n              }\n            })}\n          />\n        </FocusGroupItem>\n      </Collection.ItemSlot>\n\n      {/* Proxy tab order between trigger and content */}\n      {open && (\n        <>\n          <VisuallyHiddenPrimitive.Root\n            aria-hidden\n            tabIndex={0}\n            ref={itemContext.focusProxyRef}\n            onFocus={(event) => {\n              const content = itemContext.contentRef.current;\n              const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n              const wasTriggerFocused = prevFocusedElement === ref.current;\n              const wasFocusFromContent = content?.contains(prevFocusedElement);\n\n              if (wasTriggerFocused || !wasFocusFromContent) {\n                itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n              }\n            }}\n          />\n\n          {/* Restructure a11y tree to make content accessible to screen reader when using the viewport */}\n          {context.viewport && <span aria-owns={contentId} />}\n        </>\n      )}\n    </>\n  );\n});\n\nNavigationMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\n\nconst LINK_NAME = 'NavigationMenuLink';\n\ntype NavigationMenuLinkElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = Radix.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface NavigationMenuLinkProps extends PrimitiveLinkProps {\n  active?: boolean;\n}\n\nconst NavigationMenuLink = React.forwardRef<NavigationMenuLinkElement, NavigationMenuLinkProps>(\n  (props: ScopedProps<NavigationMenuLinkProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, active, ...linkProps } = props;\n\n    return (\n      <FocusGroupItem asChild>\n        <Primitive.a\n          data-active={active ? '' : undefined}\n          aria-current={active ? 'page' : undefined}\n          {...linkProps}\n          ref={forwardedRef}\n        />\n      </FocusGroupItem>\n    );\n  }\n);\n\nNavigationMenuLink.displayName = LINK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'NavigationMenuIndicator';\n\ntype NavigationMenuIndicatorElement = NavigationMenuIndicatorImplElement;\ninterface NavigationMenuIndicatorProps extends NavigationMenuIndicatorImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuIndicator = React.forwardRef<\n  NavigationMenuIndicatorElement,\n  NavigationMenuIndicatorProps\n>((props: ScopedProps<NavigationMenuIndicatorProps>, forwardedRef) => {\n  const { forceMount, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n\n  return context.indicatorTrack\n    ? ReactDOM.createPortal(\n        <Presence present={forceMount || isVisible}>\n          <NavigationMenuIndicatorImpl {...indicatorProps} ref={forwardedRef} />\n        </Presence>,\n        context.indicatorTrack\n      )\n    : null;\n});\n\nNavigationMenuIndicator.displayName = INDICATOR_NAME;\n\ntype NavigationMenuIndicatorImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuIndicatorImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuIndicatorImpl = React.forwardRef<\n  NavigationMenuIndicatorImplElement,\n  NavigationMenuIndicatorImplProps\n>((props: ScopedProps<NavigationMenuIndicatorImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = React.useState<NavigationMenuTriggerElement | null>(\n    null\n  );\n  const [position, setPosition] = React.useState<{ size: number; offset: number } | null>(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n\n  React.useEffect(() => {\n    const items = getItems();\n    const triggerNode = items.find((item) => item.value === context.value)?.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n\n  /**\n   * Update position when the indicator or parent track size changes\n   */\n  const handlePositionChange = () => {\n    if (activeTrigger) {\n      setPosition({\n        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop,\n      });\n    }\n  };\n  useResizeObserver(activeTrigger, handlePositionChange);\n  useResizeObserver(context.indicatorTrack, handlePositionChange);\n\n  // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? (\n    <Primitive.div\n      aria-hidden\n      data-state={isVisible ? 'visible' : 'hidden'}\n      data-orientation={context.orientation}\n      {...indicatorProps}\n      ref={forwardedRef}\n      style={{\n        position: 'absolute',\n        ...(isHorizontal\n          ? {\n              left: 0,\n              width: position.size + 'px',\n              transform: `translateX(${position.offset}px)`,\n            }\n          : {\n              top: 0,\n              height: position.size + 'px',\n              transform: `translateY(${position.offset}px)`,\n            }),\n        ...indicatorProps.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'NavigationMenuContent';\n\ntype NavigationMenuContentElement = NavigationMenuContentImplElement;\ninterface NavigationMenuContentProps\n  extends Omit<NavigationMenuContentImplProps, keyof NavigationMenuContentImplPrivateProps> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuContent = React.forwardRef<\n  NavigationMenuContentElement,\n  NavigationMenuContentProps\n>((props: ScopedProps<NavigationMenuContentProps>, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps,\n  };\n\n  return !context.viewport ? (\n    <Presence present={forceMount || open}>\n      <NavigationMenuContentImpl\n        data-state={getOpenState(open)}\n        {...commonProps}\n        ref={composedRefs}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n          context.onItemOver(itemContext.value);\n        })}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onItemLeave))}\n        style={{\n          // Prevent interaction when animating out\n          pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n          ...commonProps.style,\n        }}\n      />\n    </Presence>\n  ) : (\n    <ViewportContentMounter forceMount={forceMount} {...commonProps} ref={composedRefs} />\n  );\n});\n\nNavigationMenuContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ViewportContentMounterElement = NavigationMenuContentImplElement;\ninterface ViewportContentMounterProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ViewportContentMounter = React.forwardRef<\n  ViewportContentMounterElement,\n  ViewportContentMounterProps\n>((props: ScopedProps<ViewportContentMounterProps>, forwardedRef) => {\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const { onViewportContentChange, onViewportContentRemove } = context;\n\n  useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props,\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n\n  useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]);\n\n  // Content is proxied into the viewport\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_DISMISS = 'navigationMenu.contentDismiss';\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end';\ntype NavigationMenuContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\n\ninterface NavigationMenuContentImplPrivateProps {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  onContentFocusOutside(): void;\n  onRootContentClose(): void;\n}\ninterface NavigationMenuContentImplProps\n  extends Omit<DismissableLayerProps, 'onDismiss'>,\n    NavigationMenuContentImplPrivateProps {}\n\nconst NavigationMenuContentImpl = React.forwardRef<\n  NavigationMenuContentImplElement,\n  NavigationMenuContentImplProps\n>((props: ScopedProps<NavigationMenuContentImplProps>, forwardedRef) => {\n  const {\n    __scopeNavigationMenu,\n    value,\n    triggerRef,\n    focusProxyRef,\n    onRootContentClose,\n    onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuContentImplElement>(null);\n  const composedRefs = useComposedRefs(ref, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, value);\n  const contentId = makeContentId(context.baseId, value);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = React.useRef<MotionAttribute | null>(null);\n\n  const { onItemDismiss } = context;\n\n  React.useEffect(() => {\n    const content = ref.current;\n\n    // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) triggerRef.current?.focus();\n      };\n      content.addEventListener(CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener(CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n\n  const motionAttribute = React.useMemo(() => {\n    const items = getItems();\n    const values = items.map((item) => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value);\n\n    // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start';\n        // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      }\n      // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n\n  return (\n    <FocusGroup asChild>\n      <DismissableLayer\n        id={contentId}\n        aria-labelledby={triggerId}\n        data-motion={motionAttribute}\n        data-orientation={context.orientation}\n        {...contentProps}\n        ref={composedRefs}\n        onDismiss={() => {\n          const contentDismissEvent = new Event(CONTENT_DISMISS, {\n            bubbles: true,\n            cancelable: true,\n          });\n          ref.current?.dispatchEvent(contentDismissEvent);\n        }}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          onContentFocusOutside();\n          const target = event.target as HTMLElement;\n          // Only dismiss content when focus moves outside of the menu\n          if (context.rootNavigationMenu?.contains(target)) event.preventDefault();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          const isRootViewport = context.isRootMenu && context.viewport?.contains(target);\n          if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n          if (isTabKey) {\n            const candidates = getTabbableCandidates(event.currentTarget);\n            const focusedElement = document.activeElement;\n            const index = candidates.findIndex((candidate) => candidate === focusedElement);\n            const isMovingBackwards = event.shiftKey;\n            const nextCandidates = isMovingBackwards\n              ? candidates.slice(0, index).reverse()\n              : candidates.slice(index + 1, candidates.length);\n\n            if (focusFirst(nextCandidates)) {\n              // prevent browser tab keydown because we've handled focus\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges\n              // so focus the proxy and let browser handle\n              // tab/shift+tab keypress on the proxy instead\n              focusProxyRef.current?.focus();\n            }\n          }\n        })}\n      />\n    </FocusGroup>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'NavigationMenuViewport';\n\ntype NavigationMenuViewportElement = NavigationMenuViewportImplElement;\ninterface NavigationMenuViewportProps\n  extends Omit<NavigationMenuViewportImplProps, 'children' | 'activeContentValue'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuViewport = React.forwardRef<\n  NavigationMenuViewportElement,\n  NavigationMenuViewportProps\n>((props: ScopedProps<NavigationMenuViewportProps>, forwardedRef) => {\n  const { forceMount, ...viewportProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n\n  return (\n    <Presence present={forceMount || open}>\n      <NavigationMenuViewportImpl {...viewportProps} ref={forwardedRef} />\n    </Presence>\n  );\n});\n\nNavigationMenuViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype NavigationMenuViewportImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuViewportImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuViewportImpl = React.forwardRef<\n  NavigationMenuViewportImplElement,\n  NavigationMenuViewportImplProps\n>((props: ScopedProps<NavigationMenuViewportImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, children, ...viewportImplProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = useViewportContentContext(\n    CONTENT_NAME,\n    props.__scopeNavigationMenu\n  );\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n  const [content, setContent] = React.useState<NavigationMenuContentElement | null>(null);\n  const viewportWidth = size ? size?.width + 'px' : undefined;\n  const viewportHeight = size ? size?.height + 'px' : undefined;\n  const open = Boolean(context.value);\n  // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n\n  /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */\n  const handleSizeChange = () => {\n    if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });\n  };\n  useResizeObserver(content, handleSizeChange);\n\n  return (\n    <Primitive.div\n      data-state={getOpenState(open)}\n      data-orientation={context.orientation}\n      {...viewportImplProps}\n      ref={composedRefs}\n      style={{\n        // Prevent interaction when animating out\n        pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n        ['--radix-navigation-menu-viewport-width' as any]: viewportWidth,\n        ['--radix-navigation-menu-viewport-height' as any]: viewportHeight,\n        ...viewportImplProps.style,\n      }}\n      onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n        context.onItemOver(activeContentValue);\n      })}\n      onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onItemLeave))}\n    >\n      {Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {\n        const isActive = activeContentValue === value;\n        return (\n          <Presence key={value} present={forceMount || isActive}>\n            <NavigationMenuContentImpl\n              {...props}\n              ref={composeRefs(ref, (node) => {\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n              })}\n            />\n          </Presence>\n        );\n      })}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_GROUP_NAME = 'FocusGroup';\n\ntype FocusGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface FocusGroupProps extends PrimitiveDivProps {}\n\nconst FocusGroup = React.forwardRef<FocusGroupElement, FocusGroupProps>(\n  (props: ScopedProps<FocusGroupProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.Provider scope={__scopeNavigationMenu}>\n        <FocusGroupCollection.Slot scope={__scopeNavigationMenu}>\n          <Primitive.div dir={context.dir} {...groupProps} ref={forwardedRef} />\n        </FocusGroupCollection.Slot>\n      </FocusGroupCollection.Provider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\n\ntype FocusGroupItemElement = React.ElementRef<typeof Primitive.button>;\ninterface FocusGroupItemProps extends PrimitiveButtonProps {}\n\nconst FocusGroupItem = React.forwardRef<FocusGroupItemElement, FocusGroupItemProps>(\n  (props: ScopedProps<FocusGroupItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const getItems = useFocusGroupCollection(__scopeNavigationMenu);\n    const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.ItemSlot scope={__scopeNavigationMenu}>\n        <Primitive.button\n          {...groupProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isFocusNavigationKey = ['Home', 'End', ...ARROW_KEYS].includes(event.key);\n            if (isFocusNavigationKey) {\n              let candidateNodes = getItems().map((item) => item.ref.current!);\n              const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n              if (prevKeys.includes(event.key)) candidateNodes.reverse();\n              if (ARROW_KEYS.includes(event.key)) {\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = candidateNodes.slice(currentIndex + 1);\n              }\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n\n              // Prevent page scroll while navigating\n              event.preventDefault();\n            }\n          })}\n        />\n      </FocusGroupCollection.ItemSlot>\n    );\n  }\n);\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nfunction removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = NavigationMenu;\nconst Sub = NavigationMenuSub;\nconst List = NavigationMenuList;\nconst Item = NavigationMenuItem;\nconst Trigger = NavigationMenuTrigger;\nconst Link = NavigationMenuLink;\nconst Indicator = NavigationMenuIndicator;\nconst Content = NavigationMenuContent;\nconst Viewport = NavigationMenuViewport;\n\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n};\n\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n};\n"]},"metadata":{},"sourceType":"module"}