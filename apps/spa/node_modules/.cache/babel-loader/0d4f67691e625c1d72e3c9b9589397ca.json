{"ast":null,"code":"var _jsxFileName = \"/Users/rajmahar/Desktop/SandBox/Collgate health/skin-health-frontend/apps/spa/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction renderApp() {\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n}\n\nif (process.env.NODE_ENV === 'development') {\n  import('./mocks/browser').then(async _ref => {\n    let {\n      worker\n    } = _ref;\n    await worker.start({\n      onUnhandledRequest: 'bypass'\n    });\n    renderApp();\n  });\n} else {\n  renderApp();\n} // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","renderApp","root","createRoot","document","getElementById","render","process","env","NODE_ENV","then","worker","start","onUnhandledRequest"],"sources":["/Users/rajmahar/Desktop/SandBox/Collgate health/skin-health-frontend/apps/spa/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction renderApp() {\n  const root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n  );\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}\n\nif (process.env.NODE_ENV === 'development') {\n  import('./mocks/browser').then(async ({ worker }) => {\n    await worker.start({ onUnhandledRequest: 'bypass' });\n    renderApp();\n  });\n} else {\n  renderApp();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,SAAT,GAAqB;EACnB,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAT,CACXC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADW,CAAb;EAGAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;IAAA,uBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;AAED,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;EAC1C,OAAO,iBAAP,EAA0BC,IAA1B,CAA+B,cAAsB;IAAA,IAAf;MAAEC;IAAF,CAAe;IACnD,MAAMA,MAAM,CAACC,KAAP,CAAa;MAAEC,kBAAkB,EAAE;IAAtB,CAAb,CAAN;IACAZ,SAAS;EACV,CAHD;AAID,CALD,MAKO;EACLA,SAAS;AACV,C,CAED;AACA;AACA;;;AACAD,eAAe"},"metadata":{},"sourceType":"module"}