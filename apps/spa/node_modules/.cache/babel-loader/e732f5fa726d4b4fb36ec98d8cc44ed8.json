{"ast":null,"code":"import { Slot as e } from \"@radix-ui/react-slot\";\nimport { useComposedRefs as r } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as t } from \"@radix-ui/react-context\";\nimport o from \"react\";\nexport function createCollection(c) {\n  const n = c + \"CollectionProvider\",\n        [l, i] = t(n),\n        [f, a] = l(n, {\n    collectionRef: {\n      current: null\n    },\n    itemMap: new Map()\n  }),\n        u = e => {\n    const {\n      scope: r,\n      children: t\n    } = e,\n          c = o.useRef(null),\n          n = o.useRef(new Map()).current;\n    /*#__PURE__*/\n\n    return o.createElement(f, {\n      scope: r,\n      itemMap: n,\n      collectionRef: c\n    }, t);\n  },\n        m = c + \"CollectionSlot\",\n        s = /*#__PURE__*/o.forwardRef((t, c) => {\n    const {\n      scope: n,\n      children: l\n    } = t,\n          i = a(m, n),\n          f = r(c, i.collectionRef);\n    /*#__PURE__*/\n\n    return o.createElement(e, {\n      ref: f\n    }, l);\n  }),\n        p = c + \"CollectionItemSlot\",\n        d = \"data-radix-collection-item\",\n        R = /*#__PURE__*/o.forwardRef((t, c) => {\n    const {\n      scope: n,\n      children: l,\n      ...i\n    } = t,\n          f = o.useRef(null),\n          u = r(c, f),\n          m = a(p, n);\n    return o.useEffect(() => (m.itemMap.set(f, {\n      ref: f,\n      ...i\n    }), () => {\n      m.itemMap.delete(f);\n    })), /*#__PURE__*/o.createElement(e, {\n      [d]: \"\",\n      ref: u\n    }, l);\n  });\n\n  return [{\n    Provider: u,\n    Slot: s,\n    ItemSlot: R\n  }, function (e) {\n    const r = a(c + \"CollectionConsumer\", e);\n    return o.useCallback(() => {\n      const e = r.collectionRef.current;\n      if (!e) return [];\n      const t = Array.from(e.querySelectorAll(`[${d}]`));\n      return Array.from(r.itemMap.values()).sort((e, r) => t.indexOf(e.ref.current) - t.indexOf(r.ref.current));\n    }, [r.collectionRef, r.itemMap]);\n  }, i];\n}","map":{"version":3,"mappings":"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","names":["createCollection","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","createContextScope","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","props","scope","children","ref","React","useRef","_react","COLLECTION_SLOT_NAME","CollectionSlot","forwardRef","forwardedRef","context","composedRefs","useComposedRefs","Slot","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","useEffect","set","delete","Provider","ItemSlot","useCallback","collectionNode","orderedNodes","Array","from","querySelectorAll","values","sort","a","b","indexOf"],"sources":["/Users/rajmahar/Desktop/SandBox/Collgate health/skin-health-frontend/node_modules/@radix-ui/react-collection/dist/packages/react/collection/src/Collection.tsx"],"sourcesContent":["import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype SlotProps = Radix.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>â€¦</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n"]},"metadata":{},"sourceType":"module"}